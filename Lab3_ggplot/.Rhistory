ylab("Diagnosis") +
ggtitle("My First Beautiful bar chart")
ggplot(no_of_patients_per_diagnosis, aes(x = diagnosis, y = no_of_patients, group.by = sex, fill = sex)) +
geom_col(position = "dodge") +
theme_light() +
xlab("Number of Patients") +
ylab("Diagnosis") +
ggtitle("My First Beautiful bar chart") +
NoLegend()
ggplot(no_of_patients_per_diagnosis, aes(x = diagnosis, y = no_of_patients, group.by = sex, fill = sex)) +
geom_col(position = "dodge") +
theme_light() +
xlab("Number of Patients") +
ylab("Diagnosis") +
ggtitle("My First Beautiful bar chart") +
theme(legend.position = "bottom")
#1 average age across diagonses & number of samples in these groups
av_age_diagnoses <- meta %>%
group_by(diagnoses) %>%
summarise(av_age = mean(age),
count = n())
av_age_diagnoses %>% View()
#1 average age across diagonses & number of samples in these groups
av_age_diagnoses <- meta %>%
group_by(diagnosis) %>%
summarise(av_age = mean(age),
count = n())
av_age_diagnoses %>% View()
av_age_diagnoses %>% View()
#2 filter the samples that have more than 30 samples
av_age_diagnoses %>%
filter(count > 30)
#3 av_age & number of samples, stratified by diagnosis & sex
av_age_diagnoses_and_sex <- meta %>%
group_by(diagnosis, sex) %>%
summarise(av_age = mean(age),
count = n())
av_age_diagnoses_and_sex %>% View()
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta <- meta %>%
mutate(intu10 = days_from_first_intubation > 10)
View(meta)
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta_intu <- meta %>%
mutate(intu10 = days_from_first_intubation > 10) %>%
filter(sex == "Female")
View(meta_intu)
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta_intu <- meta %>%
mutate(intu10 = days_from_first_intubation > 10) %>%
filter(sex == "Female") %>%
group_by(diagnosis) %>%
summarise(count = n())
View(meta_intu)
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta_intu <- meta %>%
mutate(intu10 = days_from_first_intubation > 10) %>%
filter(sex == "Female") %>%
group_by(diagnosis, intu10) %>%
summarise(count = n())
View(meta_intu)
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta_intu <- meta %>%
mutate(intu10 = days_from_first_intubation > 10) %>%
filter(sex == "Female") %>%
group_by(diagnosis, intu10) %>%
summarise(count = n()) %>%
filter(diagnosis %in% c("COVID-19", "Other Pneumonia"))
View(meta_intu)
meta %>%
select(scRNAseq_id) %>%
is.na()
TRUE + TRUE
FLASE + FALSE
FALSE + FALSE
meta %>%
select(scRNAseq_id) %>%
!is.na() %>%
sum()
meta %>%
select(scRNAseq_id) %>%
!is.na() %>%
sum()
meta %>%
pull(scRNA_seq) %>%
is.na()
meta %>%
pull(scRNAseq_id) %>%
is.na()
meta %>%
pull(scRNAseq_id) %>%
!is.na()
meta %>%
pull(scRNAseq_id) %>%
is.na()
meta %>%
pull(scRNAseq_id) %>%
is.na() %>%
! %>%
meta %>%
pull(scRNAseq_id) %>%
negate(is.na()) %>%
meta %>%
pull(scRNAseq_id) %>%
is.na() %>%
negate() %>%
sum()
meta %>%
pull(scRNAseq_id) %>%
is.na()
meta %>%
pull(scRNAseq_id) %>%
is.na() %>%
negate()
is.na(meta$scRNAseq_id)
!is.na(meta$scRNAseq_id)
sum(!is.na(meta$scRNAseq_id))
to_plot_no_samples_per_diagnosis <- meta %>%
group_by(diagnosis) %>%
summarise(count = n())
to_plot_no_samples_per_diagnosis %>% View()
ggplot(data = to_plot_no_samples_per_diagnosis)
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count))
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count)) +
geom_col()
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, color = diagnosis)) +
geom_col() +
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, color = diagnosis)) +
geom_col()
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col()
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_bw()
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic()
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart")
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples")
ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples")
bar <- ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples")
bar
bar <- ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
library(Seurat)
library(Seurat)
bar <- ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
NoLegend()
bar <- ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
theme(legend.position = element_blank())
bar
bar <- ggplot(data = to_plot_no_samples_per_diagnosis, mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
NoLegend()
bar
ggplot(data = to_plot_no_samples_per_diagnosis,
mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = to_plot_no_samples_per_diagnosis,
mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
ggplot(data = to_plot_no_samples_per_diagnosis,
mapping = aes(x = diagnosis, y = count, fill = diagnosis)) +
geom_col() +
theme_classic() +
ggtitle("My First Bar Chart") +
ylab("Number of Samples") +
xlab("Diagnosis") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
patient_age_plot + plot_sex
# 1-4
patient_age_plot <- ggplot(meta, aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(size = 0.5) +
theme_classic() +
theme(axis.text.x = element_text(angle = 20)) +
scale_fill_brewer(palette="Accent") +
ggtitle("Patient Age") +
theme(legend.position = "none")
# compute summary statistics
sex_to_plot <- meta %>%
dplyr::group_by(diagnosis, sex) %>%
dplyr::summarise(number_of_patients = n()) %>%
mutate(rel_no_of_pats = number_of_patients/sum(number_of_patients))
#stacked bar chart
plot_sex <- ggplot(sex_to_plot, aes(x = diagnosis, y = rel_no_of_pats, fill = sex)) +
geom_bar(position="stack", stat = "identity") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
theme(axis.text.x = element_text(angle = 20)) +
ggtitle("Sex distribution across Diagnosis")
patient_age_plot + plot_sex
(patient_age_plot + plot_sex) +
plot_annotation(tag_levels = 'a')
#stacked bar chart
plot_sex <- ggplot(sex_to_plot, aes(x = diagnosis, y = rel_no_of_pats, fill = sex)) +
geom_bar(position="stack", stat = "identity") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
theme(axis.text.x = element_text(angle = 20)) +
ggtitle("Distribution of sex")
#using the patchwork library, we can align plots easily
patient_age_plot + plot_sex
(patient_age_plot + plot_sex) +
plot_annotation(tag_levels = 'a')
ggplot(data = meta, mapping = aes(x = diagnosis, y = age)) +
geom_boxplot()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age)) +
geom_boxplot() +
geom_jitter()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age)) +
geom_boxplot() +
geom_point()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age)) +
geom_boxplot() +
geom_jitter()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter() +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(alpha = 0.2) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(alpha = 0.2, aes(fill = diagnosis)) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(alpha = 0.2, fill = diagnosis)) +
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(alpha = 0.2, fill = diagnosis) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(aes(fill = diagnosis)) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(fill = diagnosis)) +
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(fill = diagnosis) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(colour = diagnosis) +
theme_bw() +
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(colour = diagnosis) +
theme_bw()
meta
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(aes(colour = diagnosis)) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(aes(colour = diagnosis), alpha = 0.1) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(aes(colour = diagnosis), alpha = 0.2) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(aes(colour = diagnosis), alpha = 0.4) +
theme_bw()
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter(alpha = 0.4) +
theme_bw()
```{r, eval = TRUE, include = FALSE}
meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n())
meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n(),
total_in_group = sum(count))
meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n()) %>%
ungroup() %>%
group(diagnosis) %>%
mutate(tot_no_per_diag = n())
meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(diagnosis) %>%
mutate(tot_no_per_diag = n())
meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(diagnosis) %>%
mutate(tot_no_per_diag = sum(count))
meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(diagnosis) %>%
mutate(tot_no_per_diag = sum(count),
rel_sex = count/tot_no_per_diag)
to_plot <- meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(diagnosis) %>%
mutate(tot_no_per_diag = sum(count),
rel_sex = count/tot_no_per_diag)
ggplot(to_plot, aes(x = diagnosis, y = rel_sex)) +
geom_bar()
ggplot(to_plot, aes(x = diagnosis, y = rel_sex)) +
geom_col()
ggplot(to_plot, aes(x = diagnosis, y = rel_sex, color = sex)) +
geom_col()
ggplot(to_plot, aes(x = diagnosis, y = rel_sex, fill = sex)) +
geom_col()
to_plot <- meta %>%
group_by(sex, diagnosis) %>%
summarise(count = n()) %>%
mutate(rel_sex = count/sum(count))
to_plot
#Read in the data
meta <- read_csv("~/Desktop/VHIO_course/Lab2_tidyverse/Lab2_data/bulk_RNA_metadata.csv")
#Read in the data
meta <- read_csv("~/Desktop/VHIO_course/Lab2_tidyverse/Lab2_data/bulk_RNA_metadata.csv")
View(data)
View(meta)
meta %>%
group_by(diagnosis)
meta %>%
group_by(diagnosis) %>%
summarise(av_age = mean(age))
meta %>%
group_by(diagnosis) %>%
summarise(av_age = mean(age),
count_samples = n())
meta %>%
group_by(diagnosis) %>%
summarise(av_age = mean(age),
count_samples = n())
diagnosis_summary <- meta %>%
group_by(diagnosis) %>%
summarise(av_age = mean(age),
count_samples = n())
#2 filter the samples that have more than 30 samples
diagnosis_summary %>%
filter(count_samples > 30)
#3 av_age & number of samples, stratified by diagnosis & sex
meta %>%
group_by(diagnosis, sex)
#3 av_age & number of samples, stratified by diagnosis & sex
meta %>%
group_by(diagnosis, sex) %>%
summarise(av_age = mean(age),
count_samples = n())
#3 av_age & number of samples, stratified by diagnosis & sex
meta %>%
group_by(diagnosis, sex) %>%
summarise(av_age = mean(age),
count_samples = n())
meta$days_from_first_intubation > 10
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta %>%
mutate(intu10 = days_from_first_intubation > 10) %>%
filter(sex == "Female") %>% View()
#4 create column that indicates if the sample is from a patient that has been intubated for more than 10 days
meta %>%
mutate(intu10 = days_from_first_intubation > 10) %>%
filter(sex == "Female") %>%
group_by(diagnosis, intu10) %>%
summarise(count = n())
#5 of how many patients do we have scRNAseq data?
meta %>%
filter(scRNAseq_id != "NA") %>% nrow()
is.na(meta$scRNAseq_id)
!is.na(meta$scRNAseq_id)
FALSE + FALSE
TRUE
TRUE + TRUE
sum(!is.na(meta$scRNAseq_id))
#Read in the data
meta <- read_csv("~/Desktop/VHIO_course/Lab2_tidyverse/Lab2_data/bulk_RNA_metadata.csv")
#bar plot with number of patients per diagnosis
no_patients_per_diag <- meta %>%
group_by(diagnosis) %>%
summarise(no_samples = n())
no_patients_per_diag
ggplot(data = no_patients_per_diag)
ggplot(data = no_patients_per_diag, mapping = aes(x = diagnosis, y = no_samples))
ggplot(data = no_patients_per_diag, mapping = aes(x = diagnosis, y = no_samples)) +
geom_col()
ggplot(data = no_patients_per_diag, mapping = aes(x = diagnosis, y = no_samples, fill = diagnosis)) +
geom_col()
setwd("Desktop/VHIO_course/Lab3_ggplot/")
#how to save
ggsave(bla, "mtcars.pdf", width = 20, height = 20, units = "cm")
bla <- ggplot(data = no_patients_per_diag,
mapping = aes(x = diagnosis, y = no_samples, fill = diagnosis)) +
geom_col()
#how to save
ggsave(bla, "mtcars.pdf", width = 20, height = 20, units = "cm")
?ggsave
#how to save
ggsave(filename = "no_patients_box.pdf", plot=bla,  width = 5, height = 4, units = "cm")
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age)) +
geom_boxplot()
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, color = diagnosis)) +
geom_boxplot()
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot()
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
ggtitle("My First Boxplot")
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
ggtitle("My First Boxplot") +
theme_minimal()
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
ggtitle("My First Boxplot") +
theme_dark()
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
ggtitle("My First Boxplot") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_jitter() +
ggtitle("My First Boxplot") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
#boxplot distibution of age across diagnosis
ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_point() +
ggtitle("My First Boxplot") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
#boxplot distibution of age across diagnosis
bla <- ggplot(data = meta, mapping = aes(x = diagnosis, y = age, fill = diagnosis)) +
geom_boxplot() +
geom_point() +
ggtitle("My First Boxplot") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
bla
#how to save
ggsave(filename = "no_patients_box.pdf", plot=bla,  width = 5, height = 4, units = "cm")
#how to save
ggsave(filename = "no_patients_box.pdf", plot=bla,  width = 5, height = 4)
